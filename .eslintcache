[{"D:\\projects\\stackhack2\\src\\index.js":"1","D:\\projects\\stackhack2\\src\\App.js":"2","D:\\projects\\stackhack2\\src\\reportWebVitals.js":"3","D:\\projects\\stackhack2\\src\\contexts\\AuthContext.js":"4","D:\\projects\\stackhack2\\src\\components\\MainHome.js":"5","D:\\projects\\stackhack2\\src\\components\\NavBar.js":"6","D:\\projects\\stackhack2\\src\\contexts\\firebaseConfig.js":"7","D:\\projects\\stackhack2\\src\\components\\login.js":"8","D:\\projects\\stackhack2\\src\\components\\Management.js":"9","D:\\projects\\stackhack2\\src\\components\\Profile.js":"10","D:\\projects\\stackhack2\\src\\contexts\\TeamContext.js":"11"},{"size":198,"mtime":1611034098913,"results":"12","hashOfConfig":"13"},{"size":1388,"mtime":1611251336413,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":2873,"mtime":1611315706248,"results":"16","hashOfConfig":"13"},{"size":595,"mtime":1611252228572,"results":"17","hashOfConfig":"13"},{"size":1676,"mtime":1611216236496,"results":"18","hashOfConfig":"13"},{"size":1418,"mtime":1611255282337,"results":"19","hashOfConfig":"13"},{"size":1408,"mtime":1611145318277,"results":"20","hashOfConfig":"13"},{"size":212,"mtime":1611251899473,"results":"21","hashOfConfig":"13"},{"size":4322,"mtime":1611315540076,"results":"22","hashOfConfig":"13"},{"size":1410,"mtime":1611315552220,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"zgts2v",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"26"},"D:\\projects\\stackhack2\\src\\index.js",[],["54","55"],"D:\\projects\\stackhack2\\src\\App.js",[],"D:\\projects\\stackhack2\\src\\reportWebVitals.js",[],["56","57"],"D:\\projects\\stackhack2\\src\\contexts\\AuthContext.js",["58","59","60"],"import React,{createContext,Component,useState,useEffect} from 'react';\r\nimport firebase from 'firebase';\r\n\r\nexport const AuthContext = createContext();\r\n\r\n\r\nconst AuthContextProvider = (props) => {\r\n    const[isLoggedIn, updateLogin] = useState(false);\r\n    const[userDetails,updateUserDetails] = useState({\r\n        username: '',\r\n        displayName: '',\r\n        email: '',\r\n        profilePhoto: ''\r\n    });\r\n\r\n    var user = firebase.auth().currentUser;\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if(user){\r\n                updateLogin(true);\r\n                console.log(isLoggedIn);\r\n                firebase.firestore().collection('Teams').doc(user.displayName.toString()).set({});\r\n                console.log(\"The current logged in user = \",user);\r\n                updateUserDetails({\r\n                    displayName: user.displayName,\r\n                    email: user.email,\r\n                    profilePhoto: user.photoURL\r\n                })\r\n            }\r\n            else{\r\n                updateLogin(false);\r\n                updateUserDetails({\r\n                    displayName: '',\r\n                    email: '',\r\n                    profilePhoto: ''\r\n                })\r\n            }\r\n        })\r\n    },[])\r\n\r\n    return(\r\n        <AuthContext.Provider value={{isLoggedIn,userDetails,updateLogin}}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContextProvider;\r\n\r\n// export default class AuthContextProvider extends Component{\r\n    \r\n//     state = {\r\n//         isLoggedIn: false,\r\n//         userDetails: {\r\n//             userName: 'Karthik',\r\n//             displayName: '',\r\n//             email: '',\r\n//             profilePhoto: ''\r\n//         }\r\n//     }\r\n\r\n//     componentDidMount(){\r\n//         console.log(\"component\")\r\n//         firebase.auth().onAuthStateChanged(async (user) => {\r\n//             if(user){\r\n//                 this.setState({\r\n//                     isLoggedIn: true,\r\n//                     userDetails: {\r\n//                         displayName: user.displayName,\r\n//                         email: user.email,\r\n//                         profilePhoto: user.photoURL\r\n//                     }\r\n//                 });\r\n//             }\r\n//             else{\r\n//                 this.setState({\r\n//                     isLoggedIn: false,\r\n//                     userDetails: {\r\n//                         displayName: '',\r\n//                         email: '',\r\n//                         profilePhoto: ''\r\n//                     }   \r\n//                 });\r\n//                 console.log(\"user not found\");\r\n//             }\r\n//         });\r\n//     }\r\n\r\n//     updateLoginStats = (loginStatus) => {\r\n//         this.setState({isLoggedIn: loginStatus})\r\n//     }\r\n\r\n//     render(){\r\n        \r\n//     }\r\n// }","D:\\projects\\stackhack2\\src\\components\\MainHome.js",["61","62"],"import React,{useContext} from 'react';\r\nimport {AuthContext} from '../contexts/AuthContext';\r\n\r\nexport default function MainHome(){\r\n\r\n    const { userDetails } = useContext(AuthContext);\r\n    return(\r\n        <div id=\"main-page\">\r\n            <div id=\"employees-illustration\">\r\n                <img src=\"https://assets.website-files.com/5bff8886c3964a992e90d465/5c00621b7aefa4f9ee0f4303_wide-shot.svg\"></img>\r\n            </div>\r\n            <div id=\"main-page-heading\">\r\n                <h1>Its easier to manage your teams and employees now.</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}","D:\\projects\\stackhack2\\src\\components\\NavBar.js",["63"],"import React,{useContext} from 'react';\r\nimport {AuthContext} from '../contexts/AuthContext';\r\nimport  {Link} from 'react-router-dom';\r\nimport firebase from 'firebase';\r\n\r\nimport '../styles/navbar.css'\r\n\r\nconst Navbar = () => {\r\n\r\n    const {userDetails,isLoggedIn, updateLogin} = useContext(AuthContext)\r\n\r\n    return ( \r\n        <div id=\"nav-bar-wrapper\">\r\n            <div id=\"nav-bar\">\r\n                <h1 id=\"app-name\">EMS</h1>\r\n                <div id=\"nav-links\">\r\n                    <Link to=\"/\">Home</Link>\r\n                    <Link to=\"/Manage\">Manage</Link>\r\n                    {isLoggedIn ? \r\n                    <div id=\"profile-wrapper\">\r\n                        <div id=\"profile-details\">\r\n                            <img style={{height:\"30px\",borderRadius: '100px', margin: '10px'}} src={userDetails.profilePhoto}/>\r\n                            <Link to=\"/Profile\">{userDetails.displayName}</Link>\r\n                        </div>\r\n                        <div id=\"profile-dropdown\">\r\n                            {isLoggedIn ? <Link to=\"/\" onClick={() => firebase.auth().signOut().then(() => {\r\n                            updateLogin(false);\r\n                            })}>Log out</Link> : <Link to=\"/Login\">Login</Link>}\r\n                            <Link to=\"/Profile\">Account</Link>\r\n                        </div>\r\n                    </div> :\r\n                    <div id=\"signup\">\r\n                        <Link to=\"/Login\">Login</Link>\r\n                        <Link to=\"/SignUp\">Sign Up</Link>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;\r\n","D:\\projects\\stackhack2\\src\\contexts\\firebaseConfig.js",["64"],"import firebase from 'firebase';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAwRfkeMiWVnSIlQwglsOo5oG-TAlwp4xo\",\r\n    authDomain: \"stackhack2.firebaseapp.com\",\r\n    databaseURL: \"https://stackhack2-default-rtdb.firebaseio.com\",\r\n    projectId: \"stackhack2\",\r\n    storageBucket: \"stackhack2.appspot.com\",\r\n    messagingSenderId: \"500031398666\",\r\n    appId: \"1:500031398666:web:9b4a4889506d61e6d310f3\"\r\n};\r\n\r\nconst uiConfig = {\r\n    signInSuccessUrl: \"/\",\r\n    signInFlow: 'popup',\r\n    signInOptions: [\r\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    ]\r\n}\r\n\r\nvar firebaseui = require('firebaseui')\r\nvar ui\r\n\r\nconst firebase_config = firebaseConfig;\r\n\r\n//checking if the firebase app is already initialized or not.\r\nif(!firebase.apps.length){\r\n    firebase.initializeApp(firebase_config);\r\n}\r\nelse{\r\n    firebase.app();\r\n}\r\n\r\n\r\nexport default function firebaseUiInit(){\r\n    //checking if an instance of firebase ui already exists or not\r\n    //if it does we just use that instance\r\n    //else we create a new firebase ui instance.\r\n    if(firebaseui.auth.AuthUI.getInstance()){\r\n        ui = firebaseui.auth.AuthUI.getInstance();\r\n        ui.start(\"#google_login\",uiConfig);\r\n    }\r\n    else{\r\n        ui = new firebaseui.auth.AuthUI(firebase.auth());\r\n        ui.start(\"#google_login\",uiConfig);\r\n    }\r\n}\r\n","D:\\projects\\stackhack2\\src\\components\\login.js",[],"D:\\projects\\stackhack2\\src\\components\\Management.js",[],"D:\\projects\\stackhack2\\src\\components\\Profile.js",["65"],"import React,{useContext} from 'react';\r\nimport {AuthContext} from '../contexts/AuthContext';\r\nimport {TeamContext} from '../contexts/TeamContext';\r\nimport firebase from 'firebase';\r\nimport { useTrail,a } from 'react-spring';\r\n\r\n\r\nfunction Trail({children}){\r\n    const items = React.Children.toArray(children);\r\n    const trail = useTrail(items.length, {\r\n        opacity: 1,\r\n        y: 0,\r\n        from: {opacity: 0,y:-20}\r\n    })\r\n\r\n    return(\r\n        <div id='team-details'>\r\n            {trail.map(({y,opacity},index) => (\r\n                <a.div \r\n                key={index}\r\n                className=\"team\"\r\n                style={{transform: y.interpolate((y) => `translateY(${y}%)`),opacity: opacity.interpolate((o)=>`${o}`)}}\r\n                >{items[index]}</a.div>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst Profile = () => {\r\n\r\n    const {userDetails} = useContext(AuthContext);\r\n    const {teamDetails,reRender} = useContext(TeamContext);\r\n\r\n\r\n    return(\r\n        <div id=\"profile\">\r\n            <div id=\"profile-background\"></div>\r\n            <div id=\"account\">\r\n                <h1>Welcome, {userDetails.displayName}</h1>\r\n                <div id=\"account-details\">\r\n                    <h2>Username: <span style={{fontWeight: 'bold',color: 'black'}}>{userDetails.displayName}</span></h2>\r\n                    <h2>Email:<span style={{fontWeight: 'bold',color: 'black'}}>{userDetails.email}</span></h2>\r\n                </div>\r\n\r\n            </div>\r\n            <div id='team-details-wrapper'>\r\n                {teamDetails.teams.length === 0 ? <h1>Looks empty, add some teams to display them here.</h1> :  <h1>Here are your teams.</h1>}\r\n                <Trail>\r\n                    {teamDetails.teams.map((el,index) => (\r\n                        <div key={index} id=\"team\" className=\"team-card\">\r\n                            <div id=\"delete-team\" onClick={(el) => handleDelete(el,reRender)}>\r\n                                <h2>delete</h2>\r\n                                <h1 style={{fontSize: \"15px\"}}>X</h1>\r\n                            </div>\r\n                            <h1>{el.teamName.toUpperCase()}</h1>\r\n                            <hr style={{width: '100%'}}></hr>\r\n                            <h2><span id=\"bold\">Team Manager: </span>{el.teamManager}</h2>\r\n                            <h2><span id=\"bold\">Team Head: </span>{el.teamHead}</h2>\r\n                            <h2><span id=\"bold\">Total Team Member: </span>{el.totalTeamMembers}</h2>\r\n                        </div>\r\n                    ))}\r\n                </Trail>\r\n            </div>\r\n\r\n            <div id=\"add-new-team\">\r\n                <h1>Enter the following details.</h1>\r\n                <input placeholder=\"Team Name\" id=\"teamName\"></input>\r\n                <input placeholder=\"Team Manager\" id=\"teamManager\"></input>\r\n                <input placeholder=\"Team Head\" id=\"teamHead\"></input>\r\n                <input placeholder=\"Total Team Members\" id=\"totalTeamMembers\"></input>\r\n                <button type=\"submit\" onClick={() => submitTeam(reRender)}>Create</button>\r\n            </div>\r\n\r\n            <div id=\"add-team\" onClick={(el) => (handleAddTeam())}><h1>Add Team</h1></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction handleAddTeam(){\r\n    //add the new team to the database(firebase real time database)\r\n    document.getElementById('add-new-team').classList.toggle('open')\r\n}\r\n\r\nfunction submitTeam(reRender){\r\n    var team_name = document.getElementById('teamName').value.toUpperCase();\r\n    var team_manager = document.getElementById('teamManager').value;\r\n    var team_head = document.getElementById('teamHead').value;\r\n    var tt_team_members = document.getElementById('totalTeamMembers').value;\r\n    reRender();\r\n    firebase.firestore().collection('Teams').doc(firebase.auth().currentUser.displayName).collection('addedTeams').doc(team_name).set({\r\n        teamName: team_name,\r\n        teamManager: team_manager,\r\n        teamHead: team_head,\r\n        totalTeamMembers: tt_team_members\r\n    })\r\n}\r\n\r\nfunction handleDelete(el,reRender){\r\n    firebase.firestore().collection('Teams').doc(firebase.auth().currentUser.displayName).\r\n        collection('addedTeams').doc(el.target.parentNode.getElementsByTagName('h1')[1].innerHTML).delete().then(() => reRender());\r\n}\r\n\r\nexport default Profile;\r\n","D:\\projects\\stackhack2\\src\\contexts\\TeamContext.js",["66","67"],"import React,{createContext,useState,useEffect} from 'react';\r\nimport firebase from 'firebase';\r\nimport {AuthContext} from './AuthContext';\r\n// import firebase from 'firebase';\r\n\r\nconst firestore = firebase.firestore();\r\n\r\nexport const TeamContext = createContext();\r\n\r\nconst TeamContextProvider = (props) => {\r\n\r\n    const [reRender, updateReRender] = useState(false);\r\n\r\n    const [teamDetails, updateTeamDetails] = useState({\r\n        teams:[]\r\n    });\r\n\r\n    const updateTeams = () => {\r\n        updateTeamDetails({teams: []})\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if(user){\r\n                firestore.collection('Teams').doc(user.displayName.toString()).collection('addedTeams').get().then((data) => {\r\n                    data.forEach((el) => {\r\n                        updateTeamDetails((prevState) => ({teams:[...prevState.teams,el.data()]}))\r\n                    })\r\n                })\r\n            }\r\n            else{\r\n                updateTeamDetails({teams: []})\r\n            }\r\n        })\r\n    }\r\n    \r\n\r\n    useEffect(() => {\r\n        updateTeams();\r\n    },[reRender]);\r\n\r\n    const renderAgain = () => {\r\n        updateTeams();\r\n    }\r\n\r\n    return(\r\n        <TeamContext.Provider value = {{reRender:renderAgain,teamDetails,updateTeamDetails}}>\r\n            {props.children}\r\n        </TeamContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TeamContextProvider;",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"68","replacedBy":"72"},{"ruleId":"70","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":1,"column":29,"nodeType":"76","messageId":"77","endLine":1,"endColumn":38},{"ruleId":"74","severity":1,"message":"78","line":16,"column":9,"nodeType":"76","messageId":"77","endLine":16,"endColumn":13},{"ruleId":"79","severity":1,"message":"80","line":40,"column":7,"nodeType":"81","endLine":40,"endColumn":9,"suggestions":"82"},{"ruleId":"74","severity":1,"message":"83","line":6,"column":13,"nodeType":"76","messageId":"77","endLine":6,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":10,"column":17,"nodeType":"86","endLine":10,"endColumn":125},{"ruleId":"84","severity":1,"message":"85","line":22,"column":29,"nodeType":"86","endLine":22,"endColumn":128},{"ruleId":"74","severity":1,"message":"87","line":2,"column":9,"nodeType":"76","messageId":"77","endLine":2,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":100,"column":90,"nodeType":"90","messageId":"91","endLine":100,"endColumn":91,"fix":"92"},{"ruleId":"74","severity":1,"message":"93","line":3,"column":9,"nodeType":"76","messageId":"77","endLine":3,"endColumn":20},{"ruleId":"74","severity":1,"message":"94","line":12,"column":22,"nodeType":"76","messageId":"77","endLine":12,"endColumn":36},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],["95"],["96"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isLoggedIn'. Either include it or remove the dependency array.","ArrayExpression",["97"],"'userDetails' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"98","text":"99"},"'AuthContext' is defined but never used.","'updateReRender' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"100","fix":"101"},[4156,4167],"\r\n        .","Update the dependencies array to be: [isLoggedIn]",{"range":"102","text":"103"},[1284,1286],"[isLoggedIn]"]